{"version":3,"sources":["../../../src/components/VCard/VCard.ts"],"names":[],"mappings":";;;AACA,OAAO,4CAAP;AAEA;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,UAAP,MAAuB,yBAAvB;AACA,OAAO,QAAP,MAAqB,uBAArB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAEA;AACA,SAAS,aAAT,QAA8B,oBAA9B;AACA,OAAO,MAAP,MAAmB,mBAAnB;AAKA;AACA,eAAe,OACb,SADa,EAEb,UAFa,EAGb,QAHa,EAIb,SAJa,EAKb,MALa,CAKN;AACP,UAAM,QADC;AAGP,WAAO;AACL,cAAM,OADD;AAEL,eAAO,OAFF;AAGL,aAAK,MAHA;AAIL,gBAAQ,OAJH;AAKL,aAAK;AACH,kBAAM,MADH;AAEH,qBAAS;AAFN,SALA;AASL,cAAM;AATD,KAHA;AAeP,cAAU;AACR,eADQ,qBACD;AACL;AACE,0BAAU,IADZ;AAEE,gCAAgB,KAAK,IAFvB;AAGE,iCAAiB,KAAK,KAHxB;AAIE,kCAAkB,KAAK,MAJzB;AAKE,gCAAgB,KAAK;AALvB,eAMK,KAAK,YANV;AAQD,SAVO;AAWR,cAXQ,oBAWF;AACJ,gBAAM,QAA6B;AACjC,wBAAQ,cAAc,KAAK,MAAnB;AADyB,aAAnC;AAIA,gBAAI,KAAK,GAAT,EAAc;AACZ,sBAAM,UAAN,aAA2B,KAAK,GAAhC;AACD;AAED,gBAAI,KAAK,MAAT,EAAiB,MAAM,MAAN,GAAe,cAAc,KAAK,MAAnB,CAAf;AACjB,gBAAI,KAAK,SAAT,EAAoB,MAAM,SAAN,GAAkB,cAAc,KAAK,SAAnB,CAAlB;AACpB,gBAAI,KAAK,QAAT,EAAmB,MAAM,QAAN,GAAiB,cAAc,KAAK,QAAnB,CAAjB;AACnB,gBAAI,KAAK,KAAT,EAAgB,MAAM,KAAN,GAAc,cAAc,KAAK,KAAnB,CAAd;AAEhB,mBAAO,KAAP;AACD;AA1BO,KAfH;AA4CP,UA5CO,kBA4CC,CA5CD,EA4CE;AAAA,iCACe,KAAK,iBAAL,CAAuB,KAAK,OAA5B,CADf;AAAA,YACC,GADD,sBACC,GADD;AAAA,YACM,IADN,sBACM,IADN;;AAGP,aAAK,KAAL,GAAa,KAAK,MAAlB;AAEA,eAAO,EAAE,GAAF,EAAO,KAAK,kBAAL,CAAwB,KAAK,KAA7B,EAAoC,IAApC,CAAP,EAAkD,KAAK,MAAL,CAAY,OAA9D,CAAP;AACD;AAlDM,CALM,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_cards.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Measurable,\n  Routable,\n  Themeable\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    raised: Boolean,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    tile: Boolean\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--raised': this.raised,\n        'v-card--tile': this.tile,\n        ...this.themeClasses\n      }\n    },\n    styles (): object {\n      const style: Record<string, any> = {\n        height: convertToUnit(this.height)\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      if (this.height) style.height = convertToUnit(this.height)\n      if (this.maxHeight) style.maxHeight = convertToUnit(this.maxHeight)\n      if (this.maxWidth) style.maxWidth = convertToUnit(this.maxWidth)\n      if (this.width) style.width = convertToUnit(this.width)\n\n      return style\n    }\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink(this.classes)\n\n    data.style = this.styles\n\n    return h(tag, this.setBackgroundColor(this.color, data), this.$slots.default)\n  }\n})\n"],"sourceRoot":""}